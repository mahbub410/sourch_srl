
select LOCATION_CODE,BOOK,BG,PAGE,CUSTOMER_NAME,ADDRESS,AC_NO,CUSTOMER_NUM,TARIFF,count(1) No_of_month,sum(Total_arr) Total_arr
from (
select c.CUST_ID,LOCATION_CODE,SUBSTR(AREA_CODE,1,3) BOOK,SUBSTR(AREA_CODE,4) BG,WALKING_SEQUENCE PAGE,
CUSTOMER_NAME,ADDR_DESCR1||'-'||ADDR_DESCR2 ADDRESS,CONS_EXTG_NUM AC_NO,CUSTOMER_NUM,
USAGE_CATEGORY_CODE TARIFF,bill_cycle_code,
sum(INVOICE_AMT +INVOICE_ADJUSTED_AMT-INVOICE_APPLIED_AMT) Total_arr
from BC_CUSTOMER_ADDR A,BC_CUSTOMER_CATEGORY T ,
     BC_CATEGORY_MASTER M ,bc_invoice_hdr h, bc_customers c
where bill_cycle_code<nvl(:P_bill_cycle,'209912')
and h.cust_id=c.cust_id
AND C.CUST_ID=A.CUST_ID
AND A.ADDR_TYPE='B'
AND A.ADDR_EXP_DATE IS NULL
AND C.CUST_ID=T.CUST_ID
AND T.CAT_ID=M.CATEGORY_ID
AND T.EXP_DATE IS NULL
--and c.location_code=nvl(:p_loc_code,'AA')
and c.CUSTOMER_STATUS_CODE<>'D'
and m.CUSTOMER_TYPE_CODE='01'
--and SUBSTR(AREA_CODE,4)=nvl(:p_group,'10')
group by c.CUST_ID,LOCATION_CODE,SUBSTR(AREA_CODE,1,3),SUBSTR(C.AREA_CODE,4),WALKING_SEQUENCE,
CUSTOMER_NAME,ADDR_DESCR1,ADDR_DESCR2,CONS_EXTG_NUM,CUSTOMER_NUM,USAGE_CATEGORY_CODE,bill_cycle_code
having sum(INVOICE_AMT +INVOICE_ADJUSTED_AMT-INVOICE_APPLIED_AMT)>0
)
having sum(Total_arr)>=nvl(:p_arr_amt,0) and count(1)>=nvl(:P_no_month,1) 
group by LOCATION_CODE,BOOK,BG,PAGE,CUSTOMER_NAME,ADDRESS,AC_NO,CUSTOMER_NUM,TARIFF
ORDER BY LOCATION_CODE,BOOK,BG,PAGE;